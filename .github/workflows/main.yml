name: CI / CD for Angular
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up node.js
        uses: actions/setup-node@v3.3.0
        with:
          node-version: '16'
          # cache: 'npm'

      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn build:prod

      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: dist/github-publishing
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# jobs:
#   ci:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [16.x]

#     steps:
#       - uses: actions/checkout@v2

#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}

      # - name: Cache node modules
      #   id: cache-nodemodules
      #   uses: actions/cache@v2
      #   env:
      #     cache-name: cache-node-modules
      #   with:
      #     # caching node_modules
      #     path: node_modules
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-

      # - name: Install Dependencies
      #   # if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      #   run: |
      #     yarn

      # - name: Build
      #   run: |
      #     yarn build:prod

      # - name: Lint
      #   run: |
      #     yarn lint

      # - name: Test
      #   run: |
      #     yarn test -- --prod

      # - name: Conventional Changelog Action
      #   id: changelog
      #   uses: TriPSs/conventional-changelog-action@v3
      #   with:
      #     github-token: ${{ secrets.TOKEN_GITHUB_ACTION }}
      #     output-file: "false"

      # - name: Create Release
      #   uses: actions/create-release@v1
      #   if: ${{ steps.changelog.outputs.skipped == 'false' }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB_ACTION }}
      #   with:
      #     tag_name: ${{ steps.changelog.outputs.tag }}
      #     release_name: ${{ steps.changelog.outputs.tag }}
      #     body: ${{ steps.changelog.outputs.clean_changelog }}

      # - name: Deploy
      #   run: |
      #     yarn deploy

